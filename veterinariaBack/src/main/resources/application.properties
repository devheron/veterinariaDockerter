
server.port=${SERVER_PORT:8080}

# Optional TLS (disabled by default)
server.ssl.enabled=${SSL_ENABLED:false}
server.ssl.key-store-type=${SSL_KEY_STORE_TYPE:PKCS12}
server.ssl.key-store=${SSL_KEY_STORE:}
server.ssl.key-store-password=${SSL_KEY_STORE_PASSWORD:}
server.ssl.key-alias=${SSL_KEY_ALIAS:tomcat}

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect
spring.jpa.open-in-view=false


spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:mariadb://localhost/veterinariadb}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:root}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:root}
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.flyway.enabled=false

# Optional OAuth2 Resource Server (Keycloak)
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI:}

# ——— Resource server JWT ———
# Opção 1: usar issuer-uri; o Spring descobre JWKS automaticamente
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost/realms/veterinaria

# Opção 2 (se preferir JWKS direto): comente a linha acima e use jwk-set-uri
# spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost/realms/veterinaria/protocol/openid-connect/certs
